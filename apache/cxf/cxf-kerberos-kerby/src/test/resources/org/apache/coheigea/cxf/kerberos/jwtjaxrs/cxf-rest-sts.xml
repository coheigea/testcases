<?xml version="1.0"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements. See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership. The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License. You may obtain a copy of the License at
 
  http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied. See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:sec="http://cxf.apache.org/configuration/security" xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration" xmlns:test="http://apache.org/hello_world_soap_http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xmlns:jaxrs="http://cxf.apache.org/jaxrs" xsi:schemaLocation="         http://cxf.apache.org/core         http://cxf.apache.org/schemas/core.xsd         http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd         http://cxf.apache.org/jaxws                                              http://cxf.apache.org/schemas/jaxws.xsd         http://cxf.apache.org/configuration/security         http://cxf.apache.org/schemas/configuration/security.xsd         http://cxf.apache.org/transports/http-jetty/configuration         http://cxf.apache.org/schemas/configuration/http-jetty.xsd         http://www.springframework.org/schema/util         http://www.springframework.org/schema/util/spring-util-2.0.xsd     http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">
    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"/>
    <cxf:bus>
        <cxf:features>
            <cxf:logging/>
        </cxf:features>
    </cxf:bus>
    <bean id="transportIssueDelegate" class="org.apache.cxf.sts.operation.TokenIssueOperation">
        <property name="tokenProviders" ref="transportTokenProviders"/>
        <property name="services" ref="transportService"/>
        <property name="stsProperties" ref="transportSTSProperties"/>
        <property name="claimsManager" ref="claimsManager" />
        <property name="delegationHandlers" ref="utDelegationHandler"/>
    </bean>
    <util:list id="transportTokenProviders">
        <ref bean="transportSamlTokenProvider"/>
        <ref bean="transportJWTTokenProvider"/>
    </util:list>
    <bean id="transportSamlTokenProvider" class="org.apache.cxf.sts.token.provider.SAMLTokenProvider">
    </bean>
    <bean id="transportJWTTokenProvider" class="org.apache.cxf.sts.token.provider.jwt.JWTTokenProvider">
    </bean>
    
    <bean id="utDelegationHandler" class="org.apache.cxf.sts.token.delegation.UsernameTokenDelegationHandler"/>
    
    <bean id="transportSTSProviderBean" class="org.apache.cxf.ws.security.sts.provider.SecurityTokenServiceProvider">
        <property name="issueOperation" ref="transportIssueDelegate"/>
    </bean>
    <bean id="transportService" class="org.apache.cxf.sts.service.StaticService">
        <property name="endpoints" ref="transportEndpoints"/>
    </bean>
    <util:list id="transportEndpoints">
        <value>.*
        </value>
    </util:list>
    <bean id="claimsManager" class="org.apache.cxf.sts.claims.ClaimsManager">
        <property name="claimHandlers" ref="claimHandlerList" />
    </bean>
    <util:list id="claimHandlerList">
        <ref bean="rolesClaimsHandler" />
    </util:list>
    <bean id="rolesClaimsHandler"
        class="org.apache.coheigea.cxf.kerberos.jwtjaxrs.RolesClaimsHandler">
    </bean>
    <bean id="transportSTSProperties" class="org.apache.cxf.sts.StaticSTSProperties">
        <property name="signatureCryptoProperties" value="stsKeystore.properties"/>
        <property name="signatureUsername" value="mystskey"/>
        <property name="callbackHandlerClass" value="org.apache.coheigea.cxf.kerberos.jwtjaxrs.CommonCallbackHandler"/>
        <property name="encryptionCryptoProperties" value="stsKeystore.properties"/>
        <property name="issuer" value="DoubleItSTSIssuer"/>
        <property name="encryptionUsername" value="myservicekey"/>
    </bean>
    
    <bean id="restSTS" class="org.apache.cxf.sts.rest.RESTSecurityTokenServiceImpl">
        <property name="issueSingleOperation" ref="transportIssueDelegate" />
    </bean>
    
    <bean id="callbackHandler" class="org.apache.coheigea.cxf.kerberos.jwtjaxrs.CommonCallbackHandler"/>
    <bean id="basicAuthFilter" class="org.apache.coheigea.cxf.kerberos.jwtjaxrs.WSS4JBasicAuthFilter">
        <property name="callbackHandler" ref="callbackHandler"/>
    </bean>
    
    <jaxrs:server id="stsRESTService"
       depends-on="ClientAuthHttpsSettings" 
       address="https://localhost:${testutil.ports.STSRESTServer}/SecurityTokenService">
        <jaxrs:serviceBeans>
            <ref bean="restSTS" />
        </jaxrs:serviceBeans>
        <jaxrs:providers>
           <ref bean="basicAuthFilter"/>
       </jaxrs:providers>
    </jaxrs:server>
    
    <httpj:engine-factory id="ClientAuthHttpsSettings" bus="cxf">
        <httpj:engine port="${testutil.ports.STSRESTServer}">
            <httpj:tlsServerParameters>
                <sec:keyManagers keyPassword="skpass">
                    <sec:keyStore type="jks" password="sspass" resource="stsservicestore.jks"/>
                </sec:keyManagers>
                <sec:trustManagers>
                    <sec:keyStore type="jks" password="stsspass" resource="stsstore.jks"/>
                </sec:trustManagers>
                <sec:clientAuthentication want="false" required="false"/>
            </httpj:tlsServerParameters>
        </httpj:engine>
    </httpj:engine-factory>
</beans>
